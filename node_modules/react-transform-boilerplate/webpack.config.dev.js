var path = require('path');
var webpack = require('webpack');
var ExtractTextPlugin = require('extract-text-webpack-plugin');


//var getVariables = function() {
//    console.log('getVariables');
    //return require('./src/config/colors');
//};

var svgoConfig = JSON.stringify({
    plugins: [
        {removeTitle: true},
        {convertColors: {shorthex: false}},
        {convertPathData: false}
    ]
});

module.exports = {
    devtool: 'eval',
    entry: [
        'webpack-hot-middleware/client',
        './src/index'
    ],
    output: {
        path: path.join(__dirname, 'dist'),
        filename: 'bundle.js',
        publicPath: '/static/'
    },
    plugins: [
        //new ExtractTextPlugin('style.css', { allChunks: true }),
        new webpack.HotModuleReplacementPlugin(),
        new webpack.NoErrorsPlugin()
    ],
    postcss: [
        require('postcss-custom-media')({
            extensions: require('./src/config/breakpoints-css.js')
        }),
        require('postcss-mixins')({
            mixinsDir: path.join(__dirname, 'src/mixins')
        }),
        require('postcss-nested'),
        require('postcss-css-variables')({
            //variables: getVariables()
        }),
        require('autoprefixer')({
            browsers: [
                'last 2 version', 'Explorer 9'
            ]
        })
    ],
    module: {
        loaders: [{
            test: /\.js$/,
            loaders: ['babel'],
            include: path.join(__dirname, 'src'),
            exclude: /node_modules/
        },
            {
                test: /\.css$/,
                loaders: [
                    'style',
                    'css?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!postcss'
                ]
            },
            {
                test: /\.svg$/,
                loader: 'url-loader?limit=10000&svgo-loader?' + svgoConfig
            },
            {
                test: /\.(jpe?g|png|gif)$/i,
                loaders: [
                    'url-loader?limit=10000&hash=sha512&digest=hex&name=[hash].[ext]',
                    'image-webpack?bypassOnDebug&optimizationLevel=7&interlaced=false'
                ]
            },
            {
                test: /\.(eot|woff)$/i,
                loaders: [
                    'file-loader'
                ]
            }
            //{
            //  test: /\.css$/,
            //  loader: ExtractTextPlugin.extract('style-loader', 'css-loader?modules&importLoaders=1&localIdentName=[name]__[local]___[hash:base64:5]!postcss-loader')
            //}
        ]
    }
};
